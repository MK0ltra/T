name: Fork Client

on: [push]

jobs:
  linux:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [release]
        include:
          - type: release
            afat: assembleAfatRelease
            name: " compressed"
            updates: 0
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          submodules: true
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: nttld/setup-ndk@v1.4.2
        id: setup-ndk
        with:
          ndk-version: r21e
          link-to-sdk: true
      - name: Verify Java Version
        run: |
          java -version
          javac -version

      - name: Prepare additional build number.
        env:
          ADDITIONAL_BUILD: "1"
        run: |
          result=$((ADDITIONAL_BUILD / 10000))
          echo "ADDITIONAL_BUILD_NUMBER = $result should be between 0 and 10!"
          echo "ADDITIONAL_BUILD_NUMBER=$result" >> $GITHUB_ENV
          echo "USER_REPO=$GITHUB_REPOSITORY" >> $GITHUB_ENV
          echo "CHECK_UPDATES=${{ matrix.updates }}" >> $GITHUB_ENV
      - name: Build.
        run: |
          ###
          vars=gradle.properties

          echo "DUMMY_CONST=0" >> $vars
          echo "org.gradle.workers.max=1" >> $vars
          echo "APP_ID=4" >> $vars
          echo "APP_HASH=014b35b6184100b085b0d0572f9b5103" >> $vars
          echo "RELEASE_KEY_PASSWORD=android" >> $vars
          echo "RELEASE_KEY_ALIAS=androidkey" >> $vars
          echo "RELEASE_STORE_PASSWORD=android" >> $vars
          echo "ADDITIONAL_BUILD_NUMBER=$ADDITIONAL_BUILD_NUMBER" >> $vars
          echo "USER_REPO=$USER_REPO" >> $vars
          echo "CHECK_UPDATES=${{ matrix.updates }}" >> $vars
          echo "USER_ID_OWNER=1234567890" >> $vars

          ###
          echo $ADDITIONAL_BUILD_NUMBER
          sudo apt update
          sudo apt -y install ninja-build meson unzip pip
          ./gradlew :TMessagesProj_App:${{ matrix.afat }}

          #grep BUILD_VERSION_STRING TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java | cut -d'"' -f 2 > ver.txt
          grep VERSION_NAME TMessagesProj/build/generated/source/buildConfig/${{ matrix.type }}/org/telegram/messenger/BuildConfig.java | cut -d'"' -f 2 > ver.txt

          mkdir artifact
          mv TMessagesProj_App/build/outputs/apk/afat/${{ matrix.type }}/app.apk app.apk
          cp app.apk "artifact/ForkClient $(cat ver.txt)${{ matrix.name }}.apk"
          mkdir tag_asset
          cp app.apk "tag_asset/ForkClient_$(cat ver.txt)${{ matrix.name }}.apk"
